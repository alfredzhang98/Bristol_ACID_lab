; Translated with ADS Netlist Translator (*) 270.day Jul 17 2004
;
;*************************************************************
;   Generic PDK Capacitor model                       05/17/03
;                                              PDK Tech Center
;*************************************************************

;simulator lang=spectre
;library gpdk

#ifdef cap
model mod_C_Model C_Model Tnom=27 Cj=1e-3 Cjsw=1e-10 TC1=9e-4 TC2=3e-10

;model mimcap C_Model Tnom=27 Cj=1e-3 Cjsw=1e-10 TC2=3e-10 TC1=9e-4

	inline define mimcap(n1 n2)
	parameters Area=5.61809e-10 Periph=9.481e-05 Trise=0 TC1=9e-4 TC2=3e-10 InitCond=1 Scale=1
            root=sqrt(abs(Periph*Periph-16*Area))
	mod_C_Model:mimcap n1 n2 Length=0.25*(Periph+root) Width=0.25*(Periph-root)  
	end mimcap
#endif






;endlibrary gpdk
;Spectre Math Constants
#ifndef SPECTRE_MATH_CONSTANTS
;Define a CPP variable so the constants will not be redefined
#define SPECTRE_MATH_CONSTANTS
M_E=e
M_LOG2E=1.44269504088896
M_LOG10E=log(e)
M_LN2=ln(2)
M_LN10=ln10
M_PI=pi
M_TWOPI=2*pi
M_PI_2=pi/2
M_PI_4=pi/4
M_1_PI=1/pi
M_2_PI=2/pi
M_2_SQRTPI=2/sqrt(pi)
M_SQRT1_2=sqrt(1/2)
M_DEGPERRAD=57.2957795130823208772
M_SQRT2=sqrt(2)
;End of Spectre Math Constants
#endif

;Spectre Physical Constants
#ifndef SPECTRE_PHYSICAL_CONSTANTS
;Define a CPP variable so the constants will not be redefined
#define SPECTRE_PHYSICAL_CONSTANTS
P_Q=qelectron
P_C=c0
P_K=boltzmann
P_H=planck
P_EPS0=e0
P_U0=u0
P_CELSIUS0=273.15
;End of Spectre Physical Constants
#endif

;Spectre boolean function replacements
#ifndef SPECTRE_BOOLEAN_EQUATIONS
;Define a value so the functions will not be included multiple times
#define SPECTRE_BOOLEAN_EQUATIONS
;Spectre Equals
ADS_SCS_EQ(x,y)=if (x == y) then 1 else 0 endif
;Spectre Not Equal
ADS_SCS_NEQ(x,y)=if (x != y) then 1 else 0 endif
;Spectre Less Than
ADS_SCS_LT(x,y)=if (x < y) then 1 else 0 endif
;Spectre Greater Than
ADS_SCS_GT(x,y)=if (x > y) then 1 else 0 endif
;Spectre Less Than or Equal To
ADS_SCS_LTE(x,y)=if (x <= y) then 1 else 0 endif
;Spectre Greater Than or Equal To
ADS_SCS_GTE(x,y)=if (x >= y) then 1 else 0 endif
;Spectre Trinary
ADS_SCS_TRINARY(z,x,y)=if (z == 1) then x else y endif
;End of the Spectre boolean function replacement block
#endif

